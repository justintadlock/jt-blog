Social media nav menus

One of the things I hate most about themes with social media integration is that you have to input that information into some theme settings boxes.  Most of the time, the theme is simply going to pull that info out and make an unordered list or menu of some type with it.

This has always seemed like a poor option for social media menus to me.  So, with my thinking cap on, I decided to tackle this problem.  The solution I came up with is using the WordPress nav menu system and <a href="http://css-tricks.com/attribute-selectors/" title="CSS Tricks: Attribute Selectors"><abbr title="Cascading Style Sheets">CSS</abbr> attribute selectors</a>.

I wanted to make this extremely easy for both the developer and the user.  The main goals for the user were:

<ul>
	<li>Only need enter the link information.</li>
	<li>Save this data so that other themes can take advantage of it in the future.</li>
</ul>

From the developer perspective, we need:

<ul>
	<li>A method for easily getting social media links.</li>
	<li>A method for designing these links (e.g., icons) without a lot of work.</li>
</ul>

<h2>Creating the social media menu</h2>

If you're a theme author, you should already be familiar with creating nav menus.  If not, hop on over and read my <a href="http://justintadlock.com/archives/2010/06/01/goodbye-headaches-hello-menus" title="Goodbye, headaches.  Hello, menus!">nav menus guide</a>.

The first order of business is creating a custom nav menu location so that the theme can showcase social media.  How this fits into your theme is all up to you.  Here's the basic code I'm using to register the nav menu in my theme's <code>functions.php</code> file.

<pre><code>add_action( 'init', 'my_register_menus' );

function my_register_menus() {
	register_nav_menu( 'social-media', _x( 'Social Media', 'nav menu location', 'example-textdomain' ) );
}</code></pre>

Then, I call the menu in my theme template as shown in the following code example.

<pre><code>&lt;?php if ( has_nav_menu( 'social-media' ) ) {

	wp_nav_menu(
		array(
			'theme_location'  => 'social-media',
			'container'       => 'nav',
			'container_id'    => 'menu-social-media',
			'container_class' => 'menu',
			'menu_id'         => 'menu-social-media-items',
			'menu_class'      => 'menu-items',
			'depth'         => 1,
			'fallback_cb'     => '',
		)
	);
} ?></code></pre>

This is all basic stuff and should be familiar to theme authors.  Now, on to the "idea."

<h2>Styling the social media menu</h2>

So, we've created a social media menu.  Figuring out how to style each menu is the <em>hard</em> part.  We could ask the user to input a custom class, but that puts extra burden on the user and makes your theme harder to use.  This is where <abbr title="Cascading Style Sheets">CSS</abbr> attribute selectors are handy.

Because we know part of the <abbr title="Uniform Resource Locator">URL</abbr> for social media sites (e.g., <code>facebook.com</code>, <code>twitter.com</code>, etc.), we can work from there.  For example, we need only use the following attribute selector to create styles for a link to Facebook:

<pre><code>a[href*="facebook.com"] {}</code></pre>

I'll assume from this point that you have a sprite set up with all your social media icons that you want to use.  That's how I've done it in this example.  This is all about design, so 


#menu-social-media li a {
	display:     inline-block;
	width:       25px;
	height:      25px;
	text-indent: -99999em;
	background:  url( 'images/social-menu-sprite.png' );
}

#menu-social-media li a[href*="facebook.com"] {
	background-position: 0 -25px;
}

#menu-social-media li a[href*="plus.gooogle.com"] {
	background-position: 0 -50px;
}

#menu-social-media li a[href*="twitter.com"] {
	background-position: 0 -75px;
}

















